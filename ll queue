#include <stdio.h>
#include <stdlib.h>

int main() {
    struct node {
        int data;
        struct node* next;
    };

    struct node *front = NULL, *rear = NULL, *newnode, *temp;
    int choice, value;

    while (1) {
        printf("\nMenu:\n 1. Enqueue\n 2. Dequeue\n 3. Display\n 4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        if (choice == 1) {
            printf("Enter value to enqueue: ");
            scanf("%d", &value);

            newnode = (struct node*)malloc(sizeof(struct node));
            if (newnode == NULL) {
                printf("Memory allocation failed\n");
                continue;
            }

            newnode->data = value;
            newnode->next = NULL;

            if (front == NULL && rear == NULL) {
                front = rear = newnode;
            } else {
                rear->next = newnode;
                rear = newnode;
            }
        }

        else if (choice == 2) {
            if (front == NULL) {
                printf("Queue is empty\n");
            } else {
                temp = front;
                front = front->next;
                printf("Dequeued: %d\n", temp->data);
                free(temp);

                if (front == NULL) {
                    rear = NULL;  
                }
            }
        }

        else if (choice == 3) {
            if (front == NULL) {
                printf("Queue is empty\n");
            } else {
                temp = front;
                printf("Queue elements: ");
                while (temp != NULL) {
                    printf("%d -> ", temp->data);
                    temp = temp->next;
                }
                printf("NULL\n");
            }
        }

        else if (choice == 4) {
            while (front != NULL) {
                temp = front;
                front = front->next;
                free(temp);
            }
            printf("Exiting...\n");
            break;
        }

        else {
            printf("Invalid choice\n");
        }
    }

    return 0;
}

